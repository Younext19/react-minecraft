/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useState, useEffect } from "react";
import { useFrame } from "react-three-fiber";
import { useGLTF } from "@react-three/drei/useGLTF";
import { useSpring, a } from "react-spring/three";

import chestOpenSound from "../../Assets/Audio/open-chest.mp3";
import chestCloseSound from "../../Assets/Audio/close-chest.mp3";

const openChest = new Audio(chestOpenSound);
const closeChest = new Audio(chestCloseSound);

export default function Model(props) {
  const handleOpen = () => {
    const aux = props.open;
    props.setOpen(!aux);
    if (aux) {
      openChest.volume = 0.3;
      openChest.play();
    } else {
      closeChest.volume = 0.3;
      closeChest.play();
    }
  };
  const openChestAnimation = useSpring({
    rotation: props.open ? [0, 0, 0] : [1.61, 0, 0],
    position: props.open ? [0, -1.5, 0] : [0, 0, 0],
  });
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "../../../coffre-minecraft.glb"
  );
  // const { actions } = useAnimations(animations, group);
  return (
    <group onClick={handleOpen} ref={group} {...props} dispose={null}>
      <a.group rotation={openChestAnimation.position} position={[0, -0.99, 0]}>
        <primitive object={nodes.Bone} />
        <a.primitive
          object={nodes.Bone001}
          rotation={openChestAnimation.rotation}
        />
        <skinnedMesh
          material={materials.Material}
          geometry={nodes.Cube.geometry}
          skeleton={nodes.Cube.skeleton}
          castShadow
        />
      </a.group>
    </group>
  );
}

useGLTF.preload("../../../coffre-minecraft.glb");
